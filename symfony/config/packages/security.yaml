security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\AuthControllerAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        target: app_login

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: '^/admin', roles: ROLE_ADMIN }
    - { path: '^/profile', roles: ROLE_USER }
    - { path: '^/trainings', roles: ROLE_ADMIN }
    - { path: '^/register', roles: ROLE_ADMIN }
    - { path: '^/poulet_frit', roles: ROLE_ADMIN }
    - { path: '^/login|reset-password', roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: '^/bills/client', roles: ROLE_ADMIN }
    - { path: '^/bills/comedian', roles: ROLE_COMEDIAN }
    - { path: '^/', roles: ROLE_USER }

  role_hierarchy:
    ROLE_ADMIN: ROLE_USER
    ROLE_CLIENT: ROLE_USER
    ROLE_COMEDIAN: ROLE_USER
